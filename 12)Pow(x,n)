Question-Implement pow(x, n), which calculates x raised to the power n (i.e., x^n).

 

Test Case 1:

Input: x = 2.00000, n = 10

Output: 1024.00000

Test Case 2:

Input: x = 2.10000, n = 3

Output: 9.26100

Test Case 3:

Input: x = 2.00000, n = -2

Output: 0.25000

Explanation: 2-2 = 1/22 = 1/4 = 0.25

 

Constraints:

-100.0 < x < 100.0

-231 <= n <= 231-1

n is an integer.

-104 <= x^n <= 104

Solution-class Solution {
    public double myPow(double x, int n) {
          if (n == Integer.MAX_VALUE) 
              return x;
        else if (n == Integer.MIN_VALUE) return (x == 1 || x == -1) ? 1 : 0;
        if(n<0) {
            x=1/x;
            n*=-1;
        }
        double ans = 1;
        while (n>0){
            if(n%2 == 1) ans = ans*x;
            x = x*x;
            n = n>>1;
        }
        return ans;
    }
    
    public static void main(String[] args){
    	//System.out.println(myPow());
    }
};
